Import('env', 'plugins')

plugins += env.SharedLibrary('addimages', ['addimages.cpp'])
plugins += env.SharedLibrary('joinrgb', ['joinrgb.cpp'])
plugins += env.SharedLibrary('cylclip', ['cylclip.cpp'])
plugins += env.SharedLibrary('kdbench', ['kdbench.cpp'])
plugins += env.SharedLibrary('tonemap', ['tonemap.cpp'])
#plugins += env.SharedLibrary('rdielprec', ['rdielprec.cpp'])

conf = Configure(env)
hasOpenImageDenoise = conf.CheckCXXHeader('OpenImageDenoise/oidn.hpp')
env = conf.Finish()

if hasOpenImageDenoise:
   print('Using OpenImageDenoise for denoiser')
   env.Append(CPPDEFINES = ['USE_OIID'])
   plugins += env.SharedLibrary('denoise', ['denoise.cpp'], LIBS = ['OpenImageDenoise'])
else:
   print('Using a cross-bilateral filter for denoiser')
   plugins += env.SharedLibrary('denoise', ['denoise.cpp'])


Export('plugins')
